{
    fieldName: 'pets',        
    fieldNodes: [
        {
        kind: 'Field',        
        alias: undefined,     
        name: [Object
            ],       
        arguments: [],        
        directives: [],       
        selectionSet: [Object
            ],
        loc: [Location
            ]
        }
    ],
    returnType: GraphQLUnionType {
      name: 'Pet',
      description: undefined, 
      resolveType: undefined, 
      extensions: [Object: null prototype
        ] {},
      astNode: {
        kind: 'UnionTypeDefinition',
        description: undefined,
        name: [Object
            ],       
        directives: [],       
        types: [Array
            ],       
        loc: [Location
            ]
        },
      extensionASTNodes: [],  
      _types: [
            [GraphQLObjectType
            ],
            [GraphQLObjectType
            ]
        ]
    },
    parentType: GraphQLObjectType {
      name: 'Query',
      description: undefined, 
      isTypeOf: undefined,    
      extensions: [Object: null prototype
        ] {},
      astNode: {
        kind: 'ObjectTypeDefinition',
        description: undefined,
        name: [Object
            ],       
        interfaces: [],       
        directives: [],       
        fields: [Array
            ],      
        loc: [Location
            ]
        },
      extensionASTNodes: [],  
      _fields: [Object: null prototype
        ] { pets: [Object
            ]
        },
      _interfaces: []
    },
    path: { prev: undefined, key: 'pets', typename: 'Query'
    },
    schema: GraphQLSchema {   
      __validationErrors: [], 
      description: undefined, 
      extensions: [Object: null prototype
        ] {},
      astNode: undefined,     
      extensionASTNodes: [],  
      _queryType: GraphQLObjectType {
        name: 'Query',        
        description: undefined,
        isTypeOf: undefined,  
        extensions: [Object: null prototype
            ] {},
        astNode: [Object
            ],    
        extensionASTNodes: [],      _fields: [Object: null prototype
            ],
        _interfaces: []
        },
      _mutationType: undefined,
      _subscriptionType: undefined,
      _directives: [
            [GraphQLDirective
            ],
            [GraphQLDirective
            ],
            [GraphQLDirective
            ],
            [GraphQLDirective
            ]
        ],
      _typeMap: [Object: null 
  prototype
        ] {
        Query: [GraphQLObjectType
            ],
        Pet: [GraphQLUnionType
            ],
        Cat: [GraphQLObjectType
            ],
        String: [GraphQLScalarType
            ],
        Boolean: [GraphQLScalarType
            ],
        Dog: [GraphQLObjectType
            ],
        __Schema: [GraphQLObjectType
            ],
        __Type: [GraphQLObjectType
            ],
        __TypeKind: [GraphQLEnumType
            ],
        __Field: [GraphQLObjectType
            ],
        __InputValue: [GraphQLObjectType
            ],
        __EnumValue: [GraphQLObjectType
            ],
        __Directive: [GraphQLObjectType
            ],
        __DirectiveLocation: [GraphQLEnumType
            ]
        },
      _subTypeMap: [Object: null prototype
        ] { Pet: [Object: null prototype
            ]
        },        
      _implementationsMap: [Object: null prototype
        ] {}
    },
    fragments: [Object: null prototype
    ] {},
    rootValue: undefined,     
    operation: {
      kind: 'OperationDefinition',
      operation: 'query',     
      name: { kind: 'Name', value: 'HeroForEpisode', loc: [Location
            ]
        },
      variableDefinitions: [],    directives: [],
      selectionSet: { kind: 'SelectionSet', selections: [Array
            ], loc: [Location
            ]
        },   
      loc: Location {
        start: 3,
        end: 168,
        startToken: [Token
            ],  
        endToken: [Token
            ],    
        source: [Source
            ]
        }
    },
    variableValues: {}
}